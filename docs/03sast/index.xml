<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Running SAST Scans Locally on Hugo for Fortinet TECWorkshops</title><link>https://fortinetcloudcse.github.io/FortiDevSec-Workshop/03sast.html</link><description>Recent content in Running SAST Scans Locally on Hugo for Fortinet TECWorkshops</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://fortinetcloudcse.github.io/FortiDevSec-Workshop/03sast/index.xml" rel="self" type="application/rss+xml"/><item><title>SAST Scan</title><link>https://fortinetcloudcse.github.io/FortiDevSec-Workshop/03sast/sastscan.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/FortiDevSec-Workshop/03sast/sastscan.html</guid><description>SAST Scan This task will involve running a FortiDevSec scan locally from the command line and confirming the integration with JIRA by examining some findings there.
First, nagivate to your FortiDevSec app dashboard and click the JIRA plugin icon.
Click the Add Jira Plugin switch, and fill in the values as appropriate.
FortiDevSec Field Setting Jira Server Cloud URL Your Jira Domain (i.e. https://my-project.atlassian.net) Email ID The email associated with your Jira Account API Key The API key you set up in an earlier section Once you&amp;rsquo;ve entered in the information, click Fetch Details, and your project should appear next to Jira Projects.</description></item><item><title>Discussion</title><link>https://fortinetcloudcse.github.io/FortiDevSec-Workshop/03sast/discussion.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/FortiDevSec-Workshop/03sast/discussion.html</guid><description>Discussion FortiDevSec can integrate with deployment workflows in various ways. A scan may be launched with a simple Docker command and this Docker command may be run as part of a CI/CD pipeline automatically as a build step within a particular tool, or manually to get a snapshot of the vulnerabilities present in a codebase.
Some Questions to Consider: Do your deployments consist of IaC templates or Containers? Have you run into issues with Secrets inadvertently turning up in published repositories or do you currently have steps in place to find and address leaks before deployment?</description></item></channel></rss>